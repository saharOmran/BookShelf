version: '3.8'

services:
  reverse-proxy:
    # The official v2 Traefik docker image
    image: traefik:v2.11
    # Enables the web UI and tells Traefik to listen to docker
    command: 
      - "--api.insecure=true"
      - "--providers.docker"
    ports:
      # The HTTP port
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock

  whoami:
    # A container that exposes an API to show its IP address
    image: traefik/whoami
    labels:
      - "traefik.http.routers.whoami.rule=Host(`whoami.docker.localhost`)"
    

  #######################################
  # Postgres: The database used by Kong
  #######################################
  kong-database:
    image: postgres:latest
    container_name: kong-db
    environment:
      POSTGRES_DB: kong
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: kong
    networks:
      - kong-net
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: on-failure

  #######################################
  # Kong database migration
  #######################################
  kong-migrations:
    image: kong:latest
    command: kong migrations bootstrap && kong migrations up && kong migrations finish
    depends_on:
      kong-database:
        condition: service_healthy
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-db
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_PG_DATABASE: kong
    networks:
      - kong-net
    restart: on-failure

  #######################################
  # Kong: The API Gateway
  #######################################
  kong:
    image: kong:latest
    container_name: kong-api
    depends_on:
      kong-database:
        condition: service_healthy
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-db
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_PG_DATABASE: kong
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
    volumes:  
      - /Users/nioushamaghsoudnia/Desktop/BookShelf-main/BookShelf/backend2/IAM/kong.yml:/etc/kong/kong.yml
    networks:
      - kong-net
    ports:
      - "9000:8000"
      - "8001:8001"
      - "8002:8002"
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 10
    restart: on-failure

  #######################################
  # FastAPI Application
  #######################################
  fastapi:
    build: .
    container_name: fastapi-app
    ports:
      - "8000:8000"  
    depends_on:
      - kong-database
      - redis
    environment:
      - SQLALCHEMY_DATABASE_URL=postgresql://kong:kong@kong-db:5432/kong
      - REDIS_URL=redis://redis:6379/0
    restart: on-failure
    image: python:3.9-slim
    labels:
      # Routes and services for each endpoint
      - "traefik.enable=true"
      # Gateway endpoints with custom paths
      - "traefik.http.routers.gateway_register.rule=Host(`localhost`) && Path(`/gateway/register`)"
      - "traefik.http.routers.gateway_register.entrypoints=http"
      - "traefik.http.routers.gateway_register=noop@internal"
      - "traefik.http.services.gateway_register.loadbalancer.server.port=8000" 
      - "traefik.http.routers.gateway_login.rule=Host(`localhost`) && Path(`/gateway/login`)"
      - "traefik.http.routers.gateway_login.entrypoints=http"
      - "traefik.http.routers.gateway_login=noop@internal"
      - "traefik.http.services.gateway_login.loadbalancer.server.port=8000"
      - "traefik.http.routers.gateway_token.rule=Host(`localhost`) && Path(`/gateway/token`)"
      - "traefik.http.routers.gateway_token.entrypoints=http"
      - "traefik.http.services.gateway_token.loadbalancer.server.port=8000"
      - "traefik.http.routers.gateway_token=noop@internal"
      - "traefik.http.routers.gateway_users_me.rule=Host(`localhost`) && Path(`/gateway/users/me`)"
      - "traefik.http.routers.gateway_users_me.entrypoints=http"
      - "traefik.http.routers.gateway_users_me=noop@internal"
      - "traefik.http.services.gateway_users_me.loadbalancer.server.port=8000"
    

  traefik:
    image: traefik:v2.11
    command:
      - "--api.insecure=true"
      - "--providers.docker"
    ports:
      - "90:80"
      - "9090:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"

  #######################################
  # Redis: Cache for the application
  #######################################
  redis:
    image: redis
    container_name: redis-cache
    networks:
      - kong-net
    ports:
      - "6379:6379"  
    restart: on-failure

networks:
  kong-net:
    driver: bridge
    attachable: true

  
